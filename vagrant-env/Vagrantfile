


  Vagrant.configure("2") do |config|
 
    if Vagrant.has_plugin?("vagrant-env")
        config.env.load('.env.local', '.env') # enable the plugin
    end

    NAME = ENV['NAME']
    BOX_NAME = ENV['BOX_NAME']
    DISKSIZE = ENV['DISKSIZE']
    PROVIDER = ENV['PROVIDER']
    VAGRANTFILE_API_VERSION = ENV['VAGRANTFILE_API_VERSION']
    MEMORY = ENV['MEMORY']
    PASSWD = ENV['PASSWD']
    IP_BASE = ENV['IP_BASE']
 
    
    # def env_or_default(key, default)
    # ENV[key] && ! ENV[key].empty? ? ENV[key] : default
    # end
    
    
    # The most common configuration options are documented and commented below.
    # For a complete reference, please see the online documentation at
    # https://docs.vagrantup.com.
  
    # Every Vagrant development environment requires a box. You can search for
    # boxes at https://vagrantcloud.com/search.
    config.vm.box = BOX_NAME
    # config.vm.define NAME
  
    config.vm.disk :disk, size: DISKSIZE, primary: true
    # Disable automatic box update checking. If you disable this, then
    # boxes will only be checked for updates when the user runs
    # `vagrant box outdated`. This is not recommended.
    # config.vm.box_check_update = false
  
    # Create a forwarded port mapping which allows access to a specific port
    # within the machine from a port on the host machine. In the example below,
    # accessing "localhost:8080" will access port 80 on the guest machine.
    # NOTE: This will enable public access to the opened port
    config.vm.network "forwarded_port", guest: 80, host: 8080
  
    # Create a forwarded port mapping which allows access to a specific port
    # within the machine from a port on the host machine and only allow access
    # via 127.0.0.1 to disable public access
    # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"
  
    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    config.vm.network "private_network", ip: IP_BASE
  
    # Create a public network, which generally matched to bridged network.
    # Bridged networks make the machine appear as another physical device on
    # your network.
    # config.vm.network "public_network"
  
    # Share an additional folder to the guest VM. The first argument is
    # the path on the host to the actual folder. The second argument is
    # the path on the guest to mount the folder. And the optional third
    # argument is a set of non-required options.
    # config.vm.synced_folder "../data", "/vagrant_data"
    config.vm.hostname = NAME
    # Provider-specific configuration so you can fine-tune various
    # backing providers for Vagrant. These expose provider-specific options.
    # Example for VirtualBox:
    #
    config.vm.provider PROVIDER do |vb|
      # Display the VirtualBox GUI when booting the machine
      vb.gui = false
      # vb.name = NAME
      # Customize the amount of memory on the VM:
      vb.memory = MEMORY
  
  
      config.ssh.insert_key = false
      config.ssh.username="vagrant"
      config.ssh.password="vagrant"
      config.vm.provision 'shell', inline: 'echo "vagrant:#{PASSWD}" | chpasswd'
    end
    #
    # View the documentation for the provider you are using for more
    # information on available options.
  
    # Enable provisioning with a shell script. Additional provisioners such as
    # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
    # documentation for more information about their specific syntax and use.
    config.vm.provision "shell", inline: <<-SHELL
      apt-get update
      apt-get install -y apache2
    SHELL
  end
  